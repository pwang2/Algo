var $jscomp=$jscomp||{};$jscomp.scope={};$jscomp.defineProperty="function"==typeof Object.defineProperties?Object.defineProperty:function(a,c,e){if(e.get||e.set)throw new TypeError("ES3 does not support getters and setters.");a!=Array.prototype&&a!=Object.prototype&&(a[c]=e.value)};$jscomp.getGlobal=function(a){return"undefined"!=typeof window&&window===a?a:"undefined"!=typeof global&&null!=global?global:a};$jscomp.global=$jscomp.getGlobal(this);$jscomp.SYMBOL_PREFIX="jscomp_symbol_";
$jscomp.initSymbol=function(){$jscomp.initSymbol=function(){};$jscomp.global.Symbol||($jscomp.global.Symbol=$jscomp.Symbol)};$jscomp.symbolCounter_=0;$jscomp.Symbol=function(a){return $jscomp.SYMBOL_PREFIX+(a||"")+$jscomp.symbolCounter_++};
$jscomp.initSymbolIterator=function(){$jscomp.initSymbol();var a=$jscomp.global.Symbol.iterator;a||(a=$jscomp.global.Symbol.iterator=$jscomp.global.Symbol("iterator"));"function"!=typeof Array.prototype[a]&&$jscomp.defineProperty(Array.prototype,a,{configurable:!0,writable:!0,value:function(){return $jscomp.arrayIterator(this)}});$jscomp.initSymbolIterator=function(){}};$jscomp.arrayIterator=function(a){var c=0;return $jscomp.iteratorPrototype(function(){return c<a.length?{done:!1,value:a[c++]}:{done:!0}})};
$jscomp.iteratorPrototype=function(a){$jscomp.initSymbolIterator();a={next:a};a[$jscomp.global.Symbol.iterator]=function(){return this};return a};$jscomp.polyfill=function(a,c,e,b){if(c){e=$jscomp.global;a=a.split(".");for(b=0;b<a.length-1;b++){var f=a[b];f in e||(e[f]={});e=e[f]}a=a[a.length-1];b=e[a];c=c(b);c!=b&&null!=c&&$jscomp.defineProperty(e,a,{configurable:!0,writable:!0,value:c})}};
$jscomp.polyfill("Array.from",function(a){return a?a:function(a,e,b){$jscomp.initSymbolIterator();e=null!=e?e:function(a){return a};var f=[],c=a[Symbol.iterator];if("function"==typeof c)for(a=c.call(a);!(c=a.next()).done;)f.push(e.call(b,c.value));else for(var c=a.length,g=0;g<c;g++)f.push(e.call(b,a[g]));return f}},"es6-impl","es3");function nativeSort(a){a.sort(function(a,e){return a-e});return a}
function quickSort(a){function c(a,b,f){if(!(b>=f)){for(var e=a[b+f>>1],g=b-1,h=f+1;;){for(;a[++g]<e;);for(;a[--h]>e;);if(g>=h)break;var k=a,l=h,m=k[g];k[g]=k[l];k[l]=m}c(a,b,g-1);c(a,h+1,f)}}c(a,0,a.length-1);return a}
function mergeSort(a){function c(a,b,f){if(b===f)return[a[b]];var e=f+b>>1;b=c(a,b,e);a=c(a,e+1,f);f=[];for(var g=0,h=0,k=b.length,e=a.length;g<k&&h<e;)f[f.length]=b[g]<a[h]?b[g++]:a[h++];for(;g<k;g++)f[f.length]=b[g];for(b=h;b<e;b++)f[f.length]=a[b];return f}return c(a,0,a.length-1)}
for(var input=Array.from(Array(1E3),function(a,c){return c}).map(function(a){return Math.floor(a*Math.random())}),res1=quickSort(input.slice()),res2=nativeSort(input.slice()),res3=mergeSort(input.slice()),d=!0,i=0;1E3>i;i++)d=d&&res1[i]===res2[i]&&res2[i]===res3[i];console.log(d);for(var i$1=0;100>i$1;i$1++)quickSort(input.slice());for(var i$2=0;100>i$2;i$2++)nativeSort(input.slice());for(var i$3=0;100>i$3;i$3++)mergeSort(input.slice());console.time("quick sort");for(var i$4=0;1E4>i$4;i$4++)quickSort(input.slice());
console.timeEnd("quick sort");console.time("merge sort");for(var i$5=0;1E4>i$5;i$5++)mergeSort(input.slice());console.timeEnd("merge sort");console.time("native sort");for(var i$6=0;1E4>i$6;i$6++)nativeSort(input.slice());console.timeEnd("native sort");
